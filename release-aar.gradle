// ./gradlew clean build generateRelease
apply plugin: 'maven-publish'

def pomGroupId = project.PUBLISH_GROUP_ID
def pomArtifactId = project.PUBLISH_ARTIFACT_ID
def pomVersion = project.PUBLISH_VERSION

def localReleaseDest = "${buildDir}/release/${version}"

task androidJavadocs(type: Javadoc) {
    source = project.android.sourceSets.main.java.srcDirs
    classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = pomGroupId
            artifactId = pomArtifactId
            version = pomVersion
        }
    }
    repositories {
        mavenLocal()
    }
//        maven {
//          pom.groupId = groupId
//          pom.artifactId = artifactId
//          pom.version = version
//          repository(url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath)
////          repository(url: "file://${localReleaseDest}")
//        }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDirectory = buildDir
    archiveFileName = "release-${version}.zip"
}

task generateRelease {
    doLast {
        println "Release ${version} can be found at ${localReleaseDest}/"
        println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
    }
}

//generateRelease.dependsOn(uploadArchives)

//generateRelease.dependsOn(zipRelease)
//zipRelease.dependsOn(uploadArchives)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}